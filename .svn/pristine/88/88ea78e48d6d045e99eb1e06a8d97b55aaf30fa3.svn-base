package br.com.simdata.forcavendas.view;

import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import br.com.simdata.forcavendas.R;
import br.com.simdata.forcavendas.dao.ClienteDAO;
import br.com.simdata.forcavendas.dao.PedidoDAO;
import br.com.simdata.forcavendas.model.cadastro.Cliente;
import br.com.simdata.forcavendas.model.venda.Pedido;
import br.com.simdata.forcavendas.util.DataUtils;
import br.com.simdata.forcavendas.util.StringFunctions;
import android.os.Bundle;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.view.View.OnClickListener;

public class ListPedidosActivity extends Activity {
	
    LinearLayout linear_listview_pedidos;			
	Button btn_list_pedidos_voltar,btn_list_pedidos_novo, btn_list_pedidos_pesquisa, btn_list_pedidos_filtroavancado, btn_filtroavancado_filtrar, btn_filtroavancado_limpar_filtrar;
	Spinner spinner_list_pedidos_situacao;
	EditText edit_list_pedido_pesquisa, edit_pedido_filtroavancado_dialog_data1, edit_pedido_filtroavancado_dialog_data2;
	
	PedidoDAO pedidoDAO = new PedidoDAO(this);;
	ClienteDAO clienteDAO = new ClienteDAO(this);
	
	private List<Pedido> pedidos;
	
	Date dt1 = null; 
	Date dt2 = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.list_pedidos);		

		linear_listview_pedidos = (LinearLayout) findViewById(R.id.linear_listview_pedidos);
		btn_list_pedidos_voltar = (Button) findViewById(R.id.btn_list_pedidos_voltar);
		btn_list_pedidos_novo = (Button) findViewById(R.id.btn_list_pedidos_novo);
		btn_list_pedidos_pesquisa = (Button) findViewById(R.id.btn_list_pedidos_pesquisa);
		btn_list_pedidos_filtroavancado = (Button) findViewById(R.id.btn_list_pedidos_filtroavancado);
		edit_list_pedido_pesquisa = (EditText) findViewById(R.id.edit_list_pedido_pesquisa);
		
		spinner_list_pedidos_situacao = (Spinner) findViewById(R.id.spinner_list_pedidos_situacao);
		List<String> listPesso = Arrays.asList("Pendente","Liberado","Transmitido","Emitido","Cancelado");			
		ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this,R.layout.spinner_item, listPesso);
		dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		spinner_list_pedidos_situacao.setAdapter(dataAdapter);	
		
		btn_list_pedidos_voltar.setOnClickListener(new View.OnClickListener() {//Botao voltar
			public void onClick(View v) {
				Intent myIntent = new Intent(ListPedidosActivity.this, MainActivity.class);
				startActivity(myIntent);
				finish();
				return;
			}
		});		

		btn_list_pedidos_novo.setOnClickListener(new View.OnClickListener() {//Botao Novo pedido
			public void onClick(View v) {			
				Intent intent = new Intent(ListPedidosActivity.this, ListClientesActivity.class); 		
				intent.putExtra("SELECIONAR", "true");				
            	startActivity(intent);	
            	finish();
			}
		});
		
		btn_list_pedidos_filtroavancado.setOnClickListener(new View.OnClickListener() {//Botao '+' (filtro avancado)
			public void onClick(View v) {//Quando for clicado				
                final Dialog dialog = new Dialog(ListPedidosActivity.this);// Cria um dialogo customizado                
                dialog.setContentView(R.layout.dialog_periodo);// Inclui dialog_periodo.xml na tela                
                dialog.setTitle("Filtro Avançado");// Titulo do dialog
                dialog.closeOptionsMenu();
                dialog.show();// Mostra o dialog
                                
                edit_pedido_filtroavancado_dialog_data1 = (EditText) dialog.findViewById(R.id.edit_pedido_filtroavancado_dialog_data1);
                edit_pedido_filtroavancado_dialog_data2 = (EditText) dialog.findViewById(R.id.edit_pedido_filtroavancado_dialog_data2);
                btn_filtroavancado_filtrar = (Button) dialog.findViewById(R.id.btn_filtroavancado_filtrar);
                btn_filtroavancado_limpar_filtrar = (Button) dialog.findViewById(R.id.btn_filtroavancado_limpar_filtrar);
                   
                if(dt1 != null && dt2 != null){//Se datas já tiverem sido selecionadas, mostra elas novamente no textView
                	btn_filtroavancado_limpar_filtrar.setVisibility(View.GONE);
                	edit_pedido_filtroavancado_dialog_data1.setText(DataUtils.dateToString(dt1));
                	edit_pedido_filtroavancado_dialog_data2.setText(DataUtils.dateToString(dt2));
                }else{
                	btn_filtroavancado_limpar_filtrar.setVisibility(View.GONE);
                }
                
                edit_pedido_filtroavancado_dialog_data1.setOnClickListener(new View.OnClickListener() {//Botao data 1
        			@SuppressWarnings("deprecation")
					public void onClick(View v) {//Quando clicar no campo da data 1 
        				showDialog(1);//Abre date picker para selecionar a data 1        				
        			}
        		});
                
                edit_pedido_filtroavancado_dialog_data2.setOnClickListener(new View.OnClickListener() {//Botao data 2
        			@SuppressWarnings("deprecation")
					public void onClick(View v) {//Quando clicar no campo da data 2
        				showDialog(2);//Abre date picker para selecionar a data 2
        			}
        		}); 

                btn_filtroavancado_filtrar.setOnClickListener(new OnClickListener() {//Botao filtrar
                   @Override
                    public void onClick(View v) {       
                	    filtrar();
                        dialog.dismiss();//Fecha dialog
                    }
                });
                
                btn_filtroavancado_limpar_filtrar.setOnClickListener(new OnClickListener() {//Botao limpar filtros
                    @Override
                     public void onClick(View v) {
                    	dt1 = null;
                    	dt2 = null;
                    	filtrar();
                        dialog.dismiss();//Fecha dialog
                     }
                 });
                
			}
		});
		
		spinner_list_pedidos_situacao.setOnItemSelectedListener(new OnItemSelectedListener() {//Listener situacao do pedido
		    public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {//Quando situacao selecionada
		    	filtrar();//Filtra pela situacao selecionada
		    }
		    public void onNothingSelected(AdapterView<?> parentView) { }//Quando situacao nao for selecionada
		});
				
		btn_list_pedidos_pesquisa.setOnClickListener(new View.OnClickListener() {//Botao pesquisar
			public void onClick(View v) {
				filtrar();
			}
		});
	}
	
	public void filtrar(){
		String filtro = edit_list_pedido_pesquisa.getText().toString();
		String situacao = spinner_list_pedidos_situacao.getSelectedItem().toString().substring(0, 1);		
		
		pedidoDAO.open();	
		pedidos = pedidoDAO.ListAll(filtro, situacao, dt1, dt2);//Lista pedidos
		pedidoDAO.close();
		
		linear_listview_pedidos.removeAllViews();//Remove a lista antiga, para criar novamente
		
		for(Pedido pedido : pedidos){			
			LayoutInflater inflater = (LayoutInflater) getApplicationContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			final View mLinearView = inflater.inflate(R.layout.list_pedido_row, null);//Pega layout
			mLinearView.setId(pedido.getId_pedido().intValue());//Define a id que cada linha/row irá ter

			clienteDAO.open();
			Cliente cliente = clienteDAO.getById_cliente_erp(pedido.getId_cliente());//Busca cliente para pegar o nome/razao
			clienteDAO.close();

			TextView edit_list_pedido_row_numero = (TextView) mLinearView.findViewById(R.id.edit_list_pedido_row_numero);
			TextView edit_list_pedido_row_cliente = (TextView) mLinearView.findViewById(R.id.edit_list_pedido_row_cliente);
			TextView edit_list_pedido_row_data = (TextView) mLinearView.findViewById(R.id.edit_list_pedido_row_data);
			TextView edit_list_pedido_row_situacao = (TextView) mLinearView.findViewById(R.id.edit_list_pedido_row_situacao);
			TextView edit_list_pedido_row_valor = (TextView) mLinearView.findViewById(R.id.edit_list_pedido_row_valor);			
			edit_list_pedido_row_numero.setText("Nº: " + pedido.getNumero());//Linha que mostra o número do pedido
			edit_list_pedido_row_cliente.setText("Cliente: " + cliente.getRazao());//Linha que mostra o nome do cliente do pedido
			edit_list_pedido_row_data.setText("Data: " + new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault()).format(pedido.getData()));//Linha que mostra a data do pedido
			edit_list_pedido_row_situacao.setText("Situação: " + pedido.getSituacaoDescricao());//Linha que mostra a situacao do pedido
			edit_list_pedido_row_valor.setText("Valor: " + StringFunctions.getDoubleFormatado(pedido.getTot_ped()));//Linha que mostra o valor total do pedido
			
			linear_listview_pedidos.addView(mLinearView);
					 			
			mLinearView.setOnClickListener(new OnClickListener() {//Quando um pedido selecionado
				@Override
				public void onClick(View v) {	
					FormPedidoItemActivity.itemsRemovidos = null;//Limpa a lista
				    Intent intent = new Intent(ListPedidosActivity.this, FormPedidoActivity.class); 		
				    intent.putExtra("ID_EDIT", ""+mLinearView.getId());//Passa id do pedido selecionado, para pesquisar no bd antes de mostrar na tela
				    startActivity(intent);
				    finish();								
				}
			});
		}			
	}

	//## BOTAO FISICO VOLTAR ANDROID ##
	public void onBackPressed() {//Botao de voltar do android
        AlertDialog.Builder builder = new AlertDialog.Builder(this);   	 
    	builder.setTitle("SimData");
    	builder.setMessage("Você tem certeza que deseja sair do sistema?");
    	     	 
    	builder.setPositiveButton("Sim", new DialogInterface.OnClickListener() {//Listener botao 'SIM'    	
    	    public void onClick(DialogInterface dialog, int which) {// Codigo executado quando clicar 'SIM'   	        
    	        dialog.dismiss();//Fecha dialog
    	        sair();//Sai do app
    	    }    	 
    	});    	     	 
    	builder.setNegativeButton("Não", new DialogInterface.OnClickListener() {//Listener botao 'NAO'
    		public void onClick(DialogInterface dialog, int which) {// Codigo executado quando clicar 'NAO'
    			dialog.dismiss();//Fecha dialog
    	    }    	 
    	});
        
        builder.create().show();//Mostra dialog        
    }	
	public void sair(){//Sai do aplicativo
		super.onBackPressed();//Executa metodo nativo(super) do botao voltar do android
	}
	//## BOTAO FISICO VOLTAR ANDROID ##
	
	//## DATA PICKER ##    //http://www.botskool.com/geeks/how-create-date-picker-dialog-selecting-date-android			 
    private DatePickerDialog.OnDateSetListener pDateSetListener_data1 = new DatePickerDialog.OnDateSetListener() {//Listener da data 1
    	public void onDateSet(DatePicker view, int year, int month, int day) {// 'Callback' recebida quando o usuário "pega" uma data na caixa de diálogo
    		String data1 = new StringBuilder().append(day).append("/").append(month + 1).append("/").append(String.valueOf(year).substring(2, 4)).append(" ").toString();
    		edit_pedido_filtroavancado_dialog_data1.setText(data1);// Atualiza a data1 no TextView
    		dt1 = DataUtils.stringToDate(data1);//Passa a data selecionada para a variavel DATE que vai ser usada para filtrar
        }
    };         
    
    private DatePickerDialog.OnDateSetListener pDateSetListener_data2 = new DatePickerDialog.OnDateSetListener() {//Listener da data 2
    	public void onDateSet(DatePicker view, int year, int month, int day) {// 'Callback' recebida quando o usuário "pega" uma data na caixa de diálogo
    		String data2 = new StringBuilder().append(day).append("/").append(month + 1).append("/").append(String.valueOf(year).substring(2, 4)).append(" ").toString();
    		edit_pedido_filtroavancado_dialog_data2.setText(data2);// Atualiza a data2 no TextView
    		dt2 = DataUtils.stringToDate(data2);//Passa a data selecionada para a variavel DATE que vai ser usada para filtrar
        }
    };         
    
    @Override
	public Dialog onCreateDialog(int id) {// Cria novo dialog para selecionar a data		    	
		final Calendar cal = Calendar.getInstance();//Inicia com a data atual (de hoje)
                      
		if(id == 1){//Se for Data 1
			return new DatePickerDialog(this, pDateSetListener_data1, cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH));
		}else if((id == 2)){//Se for a Data 2
			return new DatePickerDialog(this, pDateSetListener_data2, cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH));
		}
		return null;
	} 		 
	//## DATA PICKER ##
		
}