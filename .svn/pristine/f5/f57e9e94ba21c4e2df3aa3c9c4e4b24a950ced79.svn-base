package br.com.simdata.forcavendas.view;

import java.text.ParseException;
import java.util.ArrayList;

import br.com.simdata.forcavendas.R;
import br.com.simdata.forcavendas.dao.ProdutoDAO;
import br.com.simdata.forcavendas.model.cadastro.Produto;
import br.com.simdata.forcavendas.model.venda.PedidoItem;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import android.app.Activity;
import android.content.Intent;

public class FormPedidoItemActivity extends Activity {
		
	public static PedidoItem pedidoItem;
	ProdutoDAO produtoDAO = new ProdutoDAO(this);
	boolean novo = false;
	
	Button btn_form_pedido_item_voltar, btn_form_pedido_item_produto, btn_form_pedido_item_salvar, btn_form_pedido_item_excluir;
	EditText edit_pedido_item_qtdade, edit_pedido_item_vl_unitario, edit_pedido_item_descontop;
	TextView textView_pedido_item_total;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {	
		super.onCreate(savedInstanceState);
		setContentView(R.layout.form_pedido_item);
		
		if(getIntent().getStringExtra("EDITAR") != null){
			novo = false; //Editar Item						
			Log.v("", "### EDITAR ITEM ###");//TODO
		}else{ //Novo item					
			novo = true;
			Log.v("", "### NOVO ITEM ###");//TODO
		}
			
		edit_pedido_item_qtdade = (EditText) findViewById(R.id.edit_pedido_item_qtdade);		
		edit_pedido_item_vl_unitario = (EditText) findViewById(R.id.edit_pedido_item_vl_unitario);
		edit_pedido_item_descontop = (EditText) findViewById(R.id.edit_pedido_item_descontop);		
		btn_form_pedido_item_voltar = (Button) findViewById(R.id.btn_form_pedido_item_voltar);
		btn_form_pedido_item_produto = (Button) findViewById(R.id.btn_form_pedido_item_produto);
		btn_form_pedido_item_salvar = (Button) findViewById(R.id.btn_form_pedido_item_salvar);
		btn_form_pedido_item_excluir = (Button) findViewById(R.id.btn_form_pedido_item_excluir);			
		textView_pedido_item_total = (TextView) findViewById(R.id.textView_pedido_item_total);
		
		btn_form_pedido_item_voltar.setOnClickListener(new View.OnClickListener() { //Botao Voltar
			public void onClick(View v) {
				Intent myIntent = new Intent(FormPedidoItemActivity.this, ListPedidoItemsActivity.class);
				startActivity(myIntent);
				finish();
				return;
			}
		});
				
		btn_form_pedido_item_produto.setOnClickListener(new View.OnClickListener() {//Botao Produto
			public void onClick(View v) {			
			}
		});
		
		btn_form_pedido_item_salvar.setOnClickListener(new View.OnClickListener() {//Botao Salvar
			public void onClick(View v) {
				if (checkValidation()) {
					try {
						submitForm();
					} catch (ParseException e) {
						Toast.makeText(FormPedidoItemActivity.this, "ERRO!", Toast.LENGTH_LONG).show();
						e.printStackTrace();
					}
				} else {
					Toast.makeText(FormPedidoItemActivity.this, "Dados informados inválidos!", Toast.LENGTH_LONG).show();
				}														
			}
		});
		
		btn_form_pedido_item_excluir.setOnClickListener(new View.OnClickListener() {//Botao Excluir
			public void onClick(View v) {	
				return;
			}
		});
		
		edit_pedido_item_qtdade.addTextChangedListener(new TextWatcher() { //ValueChange qtd			
			public void afterTextChanged(Editable s) { }			 
			public void beforeTextChanged(CharSequence s, int start, int count, int after) { }			 
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				TextView myOutputBox = (TextView) findViewById(R.id.textView_pedido_item_total);				
				pedidoItem.setQtd(!s.toString().equals("") ? Double.parseDouble(s.toString()) : 0.0);
				myOutputBox.setText("Total: " +  CalculaTotalItem(pedidoItem) );					
			}			
		});
		
		edit_pedido_item_vl_unitario.addTextChangedListener(new TextWatcher() {	//ValueChange vl_unitario		
			public void afterTextChanged(Editable s) { }			 
			public void beforeTextChanged(CharSequence s, int start, int count, int after) { }			 
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				TextView myOutputBox = (TextView) findViewById(R.id.textView_pedido_item_total);				
				pedidoItem.setVl_unitario(!s.toString().equals("") ? Double.parseDouble(s.toString()) : 0.0);
				myOutputBox.setText("Total: " +  CalculaTotalItem(pedidoItem) );					
			}			
		});
		
		edit_pedido_item_descontop.addTextChangedListener(new TextWatcher() { //ValueChange desconto			
			public void afterTextChanged(Editable s) { }			 
			public void beforeTextChanged(CharSequence s, int start, int count, int after) { }			 
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				TextView myOutputBox = (TextView) findViewById(R.id.textView_pedido_item_total);					
				pedidoItem.setDescp(!s.toString().equals("") ? Double.parseDouble(s.toString()) : 0.0);
				myOutputBox.setText("Total: " +  CalculaTotalItem(pedidoItem) );					
			}			
		});
			
		pedidoItemToForm(pedidoItem);		
	}
	
	private void pedidoItemToForm(PedidoItem pedidoItem){				
		produtoDAO.open();		
		Produto produto = produtoDAO.getByid(pedidoItem.getId_produto());
		produtoDAO.close();		
		btn_form_pedido_item_produto.setText(produto.getCodigo()+" - "+produto.getDescricao());	
		edit_pedido_item_qtdade.setText(pedidoItem.getQtd()+"");
		edit_pedido_item_vl_unitario.setText(pedidoItem.getVl_unitario()+"");
		edit_pedido_item_descontop.setText(pedidoItem.getDescp()+"");				
		textView_pedido_item_total.setText("Total: "+pedidoItem.getTotal());	
	}
		
	private boolean checkValidation() {
		boolean ret = true; 	    
	    return ret;
	}    
	 
	private void submitForm() throws ParseException {		
		if(FormPedidoActivity.pedido.getItems() == null){
	    	FormPedidoActivity.pedido.setItems(new ArrayList<PedidoItem>());
		}
			
		pedidoItem.setQtd(Double.parseDouble(edit_pedido_item_qtdade.getText().toString()));			
		pedidoItem.setVl_unitario(Double.parseDouble(edit_pedido_item_vl_unitario.getText().toString()));
		pedidoItem.setDescp(Double.parseDouble(edit_pedido_item_descontop.getText().toString()));		
		pedidoItem.setTotal(CalculaTotalItem(pedidoItem));
		
		if(!novo){		
			for(PedidoItem item : FormPedidoActivity.pedido.getItems()){
				if(item.getId() == pedidoItem.getId()){
					FormPedidoActivity.pedido.getItems().remove(item);//remove da lista para adicionar de novo
					break;
				}				
			}			
		}	
				
		FormPedidoActivity.pedido.getItems().add(pedidoItem);
					    
    	Intent i = new Intent(FormPedidoItemActivity.this, ListPedidoItemsActivity.class);
		startActivity(i);
		finish();
	}
	
	/**
	 * Calcula o valor total do item (Qtdade * Preço Unitário - Desconto(%))
	 * 
	 * @param item
	 * @return
	 */
	public Double CalculaTotalItem(PedidoItem item) {
		return (item.getQtd() * item.getVl_unitario() - ((item.getQtd() * item.getVl_unitario()) * (item.getDescp() / 100)));			
	}	
		
	
}