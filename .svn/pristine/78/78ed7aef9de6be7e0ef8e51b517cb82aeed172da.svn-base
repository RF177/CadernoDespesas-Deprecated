package br.com.simdata.forcavendas.view;

import java.text.ParseException;
import java.util.ArrayList;

import br.com.simdata.forcavendas.R;
import br.com.simdata.forcavendas.dao.ProdutoDAO;
import br.com.simdata.forcavendas.model.cadastro.Produto;
import br.com.simdata.forcavendas.model.venda.PedidoItem;
import br.com.simdata.forcavendas.service.PedidoService;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import android.app.Activity;
import android.content.Intent;

public class FormPedidoItemActivity extends Activity {
		
	public static PedidoItem pedidoItem;
	ProdutoDAO produtoDAO = new ProdutoDAO(this);
	boolean novo = false;
	
	Button btn_form_pedido_item_voltar, btn_form_pedido_item_produto, btn_form_pedido_item_salvar, btn_form_pedido_item_excluir;
	EditText edit_pedido_item_qtdade, edit_pedido_item_vl_unitario, edit_pedido_item_descontop;
	TextView textView_pedido_item_total;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {	
		super.onCreate(savedInstanceState);
		setContentView(R.layout.form_pedido_item);
		
		if(getIntent().getStringExtra("EDITAR") != null){
			novo = false; //Editar Item									
		}else{ //Novo item					
			novo = true;			
		}
			
		edit_pedido_item_qtdade = (EditText) findViewById(R.id.edit_pedido_item_qtdade);		
		edit_pedido_item_vl_unitario = (EditText) findViewById(R.id.edit_pedido_item_vl_unitario);
		edit_pedido_item_descontop = (EditText) findViewById(R.id.edit_pedido_item_descontop);		
		btn_form_pedido_item_voltar = (Button) findViewById(R.id.btn_form_pedido_item_voltar);
		btn_form_pedido_item_produto = (Button) findViewById(R.id.btn_form_pedido_item_produto);
		btn_form_pedido_item_salvar = (Button) findViewById(R.id.btn_form_pedido_item_salvar);
		btn_form_pedido_item_excluir = (Button) findViewById(R.id.btn_form_pedido_item_excluir);			
		textView_pedido_item_total = (TextView) findViewById(R.id.textView_pedido_item_total);
		
		btn_form_pedido_item_voltar.setOnClickListener(new View.OnClickListener() { //Botao Voltar
			public void onClick(View v) {
				Intent myIntent = new Intent(FormPedidoItemActivity.this, ListPedidoItemsActivity.class);
				startActivity(myIntent);
				finish();
				return;
			}
		});
				
		btn_form_pedido_item_produto.setOnClickListener(new View.OnClickListener() {//Botao Produto
			public void onClick(View v) {			
			}
		});
		
		btn_form_pedido_item_salvar.setOnClickListener(new View.OnClickListener() {//Botao Salvar
			public void onClick(View v) {
				try {
					submitForm();
				} catch (ParseException e) {
					Toast.makeText(FormPedidoItemActivity.this, "ERRO!", Toast.LENGTH_LONG).show();
					e.printStackTrace();
				}																	
			}
		});
		
		btn_form_pedido_item_excluir.setOnClickListener(new View.OnClickListener() {//Botao Excluir
			public void onClick(View v) {	
				return;
			}
		});
		
		edit_pedido_item_qtdade.addTextChangedListener(new TextWatcher() { //ValueChange qtd			
			public void afterTextChanged(Editable s) { }			 
			public void beforeTextChanged(CharSequence s, int start, int count, int after) { }			 
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				pedidoItem.setQtd(PedidoService.formataVerificaValor(s));
				textView_pedido_item_total.setText("Total: " +  PedidoService.CalculaTotalItem(pedidoItem) );					
			}			
		});
		
		edit_pedido_item_vl_unitario.addTextChangedListener(new TextWatcher() {	//ValueChange vl_unitario		
			public void afterTextChanged(Editable s) { }			 
			public void beforeTextChanged(CharSequence s, int start, int count, int after) { }			 
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				pedidoItem.setVl_unitario(PedidoService.formataVerificaValor(s));
				textView_pedido_item_total.setText("Total: " +  PedidoService.CalculaTotalItem(pedidoItem) );					
			}			
		});
		
		edit_pedido_item_descontop.addTextChangedListener(new TextWatcher() { //ValueChange desconto			
			public void afterTextChanged(Editable s) { }			 
			public void beforeTextChanged(CharSequence s, int start, int count, int after) { }			 
			public void onTextChanged(CharSequence s, int start, int before, int count) {
				pedidoItem.setDescp(PedidoService.formataVerificaValor(s));
				textView_pedido_item_total.setText("Total: " +  PedidoService.CalculaTotalItem(pedidoItem) );					
			}			
		});
			
		pedidoItemToForm(pedidoItem);		
	}
	
	private void pedidoItemToForm(PedidoItem pedidoItem){				
		produtoDAO.open();		
		Produto produto = produtoDAO.getByid(pedidoItem.getId_produto());
		produtoDAO.close();		
		btn_form_pedido_item_produto.setText(produto.getCodigo()+" - "+produto.getDescricao());	
		edit_pedido_item_qtdade.setText(pedidoItem.getQtd()+"");
		edit_pedido_item_vl_unitario.setText(pedidoItem.getVl_unitario()+"");
		edit_pedido_item_descontop.setText(pedidoItem.getDescp()+"");				
		textView_pedido_item_total.setText("Total: "+pedidoItem.getTotal());	
	}
	 
	private void submitForm() throws ParseException {		
		if(FormPedidoActivity.pedido.getItems() == null){
	    	FormPedidoActivity.pedido.setItems(new ArrayList<PedidoItem>());
		}
		
		pedidoItem.setQtd(PedidoService.formataVerificaValor(edit_pedido_item_qtdade.getText()));			
		pedidoItem.setVl_unitario(PedidoService.formataVerificaValor(edit_pedido_item_vl_unitario.getText()));
		pedidoItem.setDescp(PedidoService.formataVerificaValor(edit_pedido_item_descontop.getText()));
		pedidoItem.setTotal(PedidoService.CalculaTotalItem(pedidoItem));
		
		if(pedidoItem.getTotal() == 0.0){
			Toast.makeText(FormPedidoItemActivity.this, "Total do Item com valor zerado, não foi possível adicionar ao pedido!", Toast.LENGTH_LONG).show();
		}else{		
			if(!novo){		
				for(PedidoItem item : FormPedidoActivity.pedido.getItems()){
					if(item.getId() == pedidoItem.getId()){
						FormPedidoActivity.pedido.getItems().remove(item);//remove da lista para adicionar de novo
						break;
					}				
				}			
			}	
					
			FormPedidoActivity.pedido.getItems().add(pedidoItem);//Adiciona a lista de itens do pedido
						    
	    	Intent i = new Intent(FormPedidoItemActivity.this, ListPedidoItemsActivity.class);
			startActivity(i);
			finish();
		}
	}
	
	
		
	
}